; PlatformIO Configuration for ESP32 Motion Detection System
; Platform: ESP32 with Arduino Framework
; Version: 2.0.0

[platformio]
default_envs = esp32dev
src_dir = src
include_dir = include
lib_dir = lib
data_dir = data

; ===================================================================
; COMMON CONFIGURATION
; ===================================================================
[common]
platform = espressif32@^6.4.0
framework = arduino
monitor_speed = 115200
monitor_filters = 
    esp32_exception_decoder
    time
    log2file
    colorize

; Core Libraries
lib_deps_common = 
    bblanchon/ArduinoJson@^6.21.4
    witnessmenow/UniversalTelegramBot@^1.3.0
    arduino-libraries/NTPClient@^3.2.1

; Common Build Flags
build_flags_common = 
    -DCORE_DEBUG_LEVEL=3
    -DCONFIG_ESP32_ENABLE_COREDUMP_TO_FLASH=1
    -DTELEGRAM_MAX_MESSAGE_LENGTH=4096

; ===================================================================
; MAIN ESP32 ENVIRONMENT (DEFAULT)
; ===================================================================
[env:esp32dev]
extends = common
board = esp32dev
upload_speed = 115200
; Let PlatformIO auto-detect ports at runtime
; monitor_port and upload_port commented out to force auto-detection

; Build Configuration
build_flags = 
    ${common.build_flags_common}
    -DESP32_DEV_BOARD=1
    -DHAS_BUILTIN_LED=1
    -DBUILTIN_LED_PIN=2
    -Os
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -DMQTT_MAX_PACKET_SIZE=1024

; Libraries
lib_deps = 
    ${common.lib_deps_common}

; Upload settings - using PlatformIO defaults for automatic port detection
; Removed upload_flags to prevent baud rate parsing errors

; ===================================================================
; ESP32-C3 ENVIRONMENT
; ===================================================================
[env:esp32-c3]
extends = common
board = esp32-c3-devkitm-1
upload_speed = 460800

build_flags = 
    ${common.build_flags_common}
    -DESP32_C3_BOARD=1
    -DHAS_BUILTIN_LED=1
    -DBUILTIN_LED_PIN=8
    -Os

lib_deps = 
    ${common.lib_deps_common}

; ===================================================================
; ESP32-S2 ENVIRONMENT
; ===================================================================
[env:esp32-s2]
extends = common
board = esp32-s2-saola-1
upload_speed = 460800

build_flags = 
    ${common.build_flags_common}
    -DESP32_S2_BOARD=1
    -DHAS_BUILTIN_LED=1
    -DBUILTIN_LED_PIN=18
    -Os

lib_deps = 
    ${common.lib_deps_common}

; ===================================================================
; ESP32-S3 ENVIRONMENT
; ===================================================================
[env:esp32-s3]
extends = common
board = esp32-s3-devkitc-1
upload_speed = 921600

build_flags = 
    ${common.build_flags_common}
    -DESP32_S3_BOARD=1
    -DHAS_BUILTIN_LED=1
    -DBUILTIN_LED_PIN=48
    -DBOARD_HAS_PSRAM
    -DCONFIG_SPIRAM_SUPPORT=1
    -Os

lib_deps = 
    ${common.lib_deps_common}
    espressif/esp32-camera@^2.0.4

; ===================================================================
; DEVELOPMENT ENVIRONMENT (DEBUG BUILD)
; ===================================================================
[env:esp32dev-debug]
extends = env:esp32dev
build_type = debug

build_flags = 
    ${env:esp32dev.build_flags}
    -DDEBUG_ESP_PORT=Serial
    -DDEBUG_ESP_WIFI
    -DDEBUG_ESP_HTTP_CLIENT
    -DDEBUG_ESP_SSL
    -DDEBUG_ESP_TLS_MEM
    -DCORE_DEBUG_LEVEL=5
    -DENABLE_DEBUG_OUTPUT=1
    -DVERBOSE_LOGGING=1
    -g3
    -O0

monitor_filters = 
    esp32_exception_decoder
    time
    log2file
    colorize
    debug

; ===================================================================
; PRODUCTION ENVIRONMENT (OPTIMIZED)
; ===================================================================
[env:esp32dev-production]
extends = env:esp32dev

build_flags = 
    ${env:esp32dev.build_flags}
    -DCORE_DEBUG_LEVEL=1
    -DENABLE_DEBUG_OUTPUT=0
    -DVERBOSE_LOGGING=0
    -DPRODUCTION_BUILD=1
    -Os
    -DNDEBUG
    -fno-exceptions
    -fno-rtti

build_unflags = 
    -g
    -ggdb

; Optimize flash usage
board_build.flash_mode = qio
board_build.f_flash = 80000000L
board_build.f_cpu = 240000000L

; ===================================================================
; OTA UPDATE ENVIRONMENT
; ===================================================================
[env:esp32dev-ota]
extends = env:esp32dev

upload_protocol = espota
upload_port = ESP32-Motion.local
upload_flags = 
    --port=3232
    --auth=your-ota-password

lib_deps = 
    ${env:esp32dev.lib_deps}
    ESPAsyncWebServer-esphome@^3.1.0

build_flags = 
    ${env:esp32dev.build_flags}
    -DENABLE_OTA_UPDATES=1
    -DOTA_PASSWORD="your-ota-password"

; ===================================================================
; TESTING ENVIRONMENT
; ===================================================================
[env:esp32dev-test]
extends = env:esp32dev
test_framework = unity
test_port = auto
test_speed = 115200
test_build_src = yes

lib_deps = 
    ${env:esp32dev.lib_deps}
    throwtheswitch/Unity@^2.5.2

build_flags = 
    ${env:esp32dev.build_flags}
    -DUNIT_TEST=1
    -DTEST_BUILD=1

; Test configuration
test_ignore = 
    test_desktop
    test_embedded

; ===================================================================
; LOW POWER ENVIRONMENT
; ===================================================================
[env:esp32dev-lowpower]
extends = env:esp32dev

build_flags = 
    ${env:esp32dev.build_flags}
    -DENABLE_POWER_MANAGEMENT=1
    -DENABLE_LIGHT_SLEEP=1
    -DCPU_FREQ_MHZ=80
    -DCONFIG_PM_ENABLE=1
    -DCONFIG_FREERTOS_USE_TICKLESS_IDLE=1

board_build.f_cpu = 80000000L

; ===================================================================
; CUSTOM BOARD ENVIRONMENTS
; ===================================================================

; NodeMCU-32S
[env:nodemcu-32s]
extends = common
board = nodemcu-32s
upload_speed = 921600

build_flags = 
    ${common.build_flags_common}
    -DNODEMCU_32S_BOARD=1
    -DHAS_BUILTIN_LED=1
    -DBUILTIN_LED_PIN=2

lib_deps = ${common.lib_deps_common}

; WEMOS D1 R32
[env:wemos-d1-r32]
extends = common
board = wemos_d1_uno32
upload_speed = 921600

build_flags = 
    ${common.build_flags_common}
    -DWEMOS_D1_R32_BOARD=1
    -DHAS_BUILTIN_LED=1
    -DBUILTIN_LED_PIN=2

lib_deps = ${common.lib_deps_common}

; TTGO T-Display
[env:ttgo-t-display]
extends = common
board = ttgo-t1
upload_speed = 921600

build_flags = 
    ${common.build_flags_common}
    -DTTGO_T_DISPLAY_BOARD=1
    -DHAS_BUILTIN_LED=0
    -DHAS_DISPLAY=1
    -DTFT_CS=5
    -DTFT_DC=16
    -DTFT_RST=23

lib_deps = 
    ${common.lib_deps_common}
    bodmer/TFT_eSPI@^2.5.0

; ===================================================================
; GLOBAL SETTINGS
; ===================================================================

; Check for library updates
check_tool = cppcheck, clangtidy
check_flags = 
    cppcheck: --enable=all --std=c++11 --suppress=unusedFunction
    clangtidy: --checks=-*,readability-*,performance-*,modernize-*

; Code analysis
extra_scripts = 
    pre:scripts/pre_build.py
    post:scripts/post_build.py

; Advanced build options (commented out - not supported in all versions)
; build_cache_dir = .pio/build_cache
; libdeps_dir = .pio/libdeps

; Memory configuration
board_build.partitions = partitions.csv
board_build.embed_files = 
    data/certs/ca_cert.pem

; ===================================================================
; DOCUMENTATION AND METADATA
; ===================================================================

; Project metadata
custom_project_name = ESP32 Motion Detection System
custom_project_version = 2.0.0
custom_project_description = Advanced motion detection with Telegram notifications
custom_project_author = Your Name
custom_project_license = MIT
custom_project_url = https://github.com/your-username/motion-detect-notification

; Build information
custom_build_date = __DATE__
custom_build_time = __TIME__
custom_compiler_version = __VERSION__